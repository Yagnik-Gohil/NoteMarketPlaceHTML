@using PagedList;
@using PagedList.Mvc;

@model IPagedList<NotesMarketPlace.Models.Members>

@{

    ViewBag.Title = "Members";
    Layout = "~/Views/Shared/AdminNavbar.cshtml";
    <link rel="stylesheet" href="~/Content/AdminContent/css/Members.css" />
}

<!-- Members Container -->

<div class="container" id="members-container">

    @using (Html.BeginForm("AllMembers", "AllMembers", FormMethod.Get))
    {
        <div class="row">

            <div class="col-md-4">
                <h2>Members</h2>
            </div>
            <div class="col-md-8 d-flex justify-content-end">
                <input class="form-control mr-2 members-search" type="text" placeholder="Search" aria-label="Search" name="search">
                <button class="btn members-search-button" type="submit">SEARCH</button>
            </div>

        </div>
    }

    <br>

    <div class="row">

        <div class="col table-responsive-md">

            <table class="table shadow-on-hover table-border">
                <thead>
                    <tr>
                        <th scope="col">SR NO.</th>
                        <th scope="col">@Html.ActionLink("FIRST NAME", "AllMembers", new { sortby = ViewBag.SortFirstName, search = Request.QueryString["search"] })</th>
                        <th scope="col">@Html.ActionLink("LAST NAME", "AllMembers", new { sortby = ViewBag.SortLastName, search = Request.QueryString["search"] })</th>
                        <th scope="col">@Html.ActionLink("EMAIL", "AllMembers", new { sortby = ViewBag.SortEmail, search = Request.QueryString["search"] })</th>
                        <th scope="col">@Html.ActionLink("JOINING DATE", "AllMembers", new { sortby = ViewBag.SortDate, search = Request.QueryString["search"] })</th>
                        <th scope="col">UNDER REVIEW NOTES</th>
                        <th scope="col">PUBLISHED NOTES</th>
                        <th scope="col">DOWNLOADED NOTES</th>
                        <th scope="col">TOTAL EXPENSES</th>
                        <th scope="col">TOTAL EARNINGS</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Count() == 0)
                    {
                        <tr>
                            <td colspan="11" class="text-center">No record found</td>
                        </tr>
                    }
                    @{ int c = 0; }
                    @foreach (var item in Model)
                    {
                        c += 1;
                        <tr>
                            <td scope="row">@c</td>
                            <td>@item.FirstName</td>
                            <td>@item.LastName</td>
                            <td>@item.Email</td>
                            <td>@item.JoiningDate.Value.ToShortDateString()</td>
                            <td align="center"><a href="@Url.Action("NotesUnderReview","NotesUnderReview", new { Seller = item.FirstName + " " + item.LastName })" style="color:#6255a5;">@item.UnderReviewNotes</a></td>
                            <td align="center"><a href="@Url.Action("PublishedNotes","PublishedNotes", new { Seller = item.FirstName + " " + item.LastName })" style="color:#6255a5;">@item.PublishedNotes</a></td>
                            <td align="center"><a href="@Url.Action("DownloadedNotes","DownloadedNotes", new { Buyer = item.FirstName + " " + item.LastName })" style="color:#6255a5;">@item.DownloadedNotes</a></td>
                            <td align="center"><a href="@Url.Action("DownloadedNotes","DownloadedNotes", new { Buyer = item.FirstName + " " + item.LastName })" style="color:#6255a5;">₹ @item.TotalExpenses</a></td>
                            <td align="center">₹ @item.TotalEarnings</td>
                            <td class="dropdown">
                                <i class="fa fa-ellipsis-v float-right"></i>
                                <div class="dropdown">
                                    <div class="dropdown-content">
                                        <a href="@Url.Action("MemberDetails","MemberDetails", new { uid = item.UID })">View More Detail</a>
                                        @if (item.IsActive)
                                        {
                                            <a onclick="if(confirm('Are you sure you want to make this member inactive?')) location.href='@Url.Action("Deactivate","AllMembers", new { uid = item.UID })'" >Deactivate</a>
                                        }
                                        else
                                        {
                                            <a onclick="if(confirm('Are you sure you want to make this member inactive?')) href='@Url.Action("Activate","AllMembers", new { uid = item.UID })'">Activate</a>
                                        }
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>

        </div>

    </div>

    <!-- Pagination -->

    <div class="row justify-content-center">

        <div class="pagination">
            @Html.PagedListPager(Model, page => Url.Action("AllMembers", new { page, search = Request.QueryString["search"], sortby = Request.QueryString["sortby"] }))
        </div>

    </div>

</div>

<!-- Members Container End-->