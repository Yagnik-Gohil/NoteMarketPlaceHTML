@using PagedList;
@using PagedList.Mvc;

@model NotesMarketPlace.Models.Dashboard
@{

    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/NavbarAfter.cshtml";

}
<!-- Dashboard Container -->

<div class="container" id="dashboard-container">

    <div class="row">

        <div class="col-md-6">
            <h2>Dashboard</h2>
        </div>
        <div class="col-md-6" align="right">
            <button class="btn" type="submit" id="add-note-button" onclick="location.href='@Url.Action("AddNotes", "AddNotes")'">ADD NOTE</button>
        </div>

    </div>

    <br>

    <div class="row">

        <!-- Left -->

        <div class="col-xl-6 mb-2">

            <div class="dashboard-border">

                <div class="row" align="center">

                    <div class="col-md-4" id="my-earning-border">

                        <img src="~/Content/FrontContent/images/Dashboard/earning-icon.svg" alt="">
                        <h3>My earning</h3>

                    </div>

                    <div class="col-md-4">

                        <a href="@Url.Action("MySoldNotes","MySoldNotes")" style="text-decoration:none;"><h3>@ViewBag.SoldNotes</h3></a>
                        <p>Number of notes sold</p>

                    </div>

                    <div class="col-md-4">

                        <h3>₹ @ViewBag.Earning</h3>
                        <p>Money Earned</p>

                    </div>

                </div>

            </div>

        </div>

        <!-- Right -->
        <div class="col-xl-6">

            <div class="row" align="center">

                <div class="col-md-4 mb-2">

                    <div class="dashboard-border">
                        <a href="@Url.Action("MyDownloads","MyDownloads")" style="text-decoration:none;"><h3>@ViewBag.DownloadNotes</h3></a>
                        <p>My Downloads</p>
                    </div>

                </div>

                <div class="col-md-4 mb-2">

                    <div class="dashboard-border">
                        <a href="@Url.Action("MyRejectedNotes","MyRejectedNotes")" style="text-decoration:none;"><h3>@ViewBag.RejectedNotes</h3></a>
                        <p>My Rejected Notes</p>
                    </div>

                </div>

                <div class="col-md-4 mb-2">

                    <div class="dashboard-border">
                        <a href="@Url.Action("BuyerRequest","BuyerRequest")" style="text-decoration:none;"><h3>@ViewBag.BuyerRequests</h3></a>
                        <p>Buyer Requests</p>
                    </div>

                </div>

            </div>

        </div>

    </div>

</div>

<!-- Dashboard Container End -->
<!-- Progress Notes Container -->

<div class="container" id="progress-container">

    @using (Html.BeginForm("Dashboard", "Dashboard", new { search2 = Request.QueryString["search2"], sortby2 = Request.QueryString["sortby2"] }, FormMethod.Get))
    {
        <div class="row">

            <div class="col-md-6">
                <h3>In Progress Notes</h3>
            </div>
            <div class="col-md-6 d-flex justify-content-end">
                <input class="form-control mr-2 dashboard-search" type="text" placeholder="Search" aria-label="Search" name="search">
                <button class="btn dashboard-search-button">SEARCH</button>
            </div>

        </div>
    }

    <br>

    <div class="row">

        <div class="col table-responsive-md">

            <table class="table shadow-on-hover table-border">
                <thead>
                    <tr>
                        <th scope="col">@Html.ActionLink("ADDED DATE","Dashboard", new { sortby = ViewBag.SortDate, search = Request.QueryString["search"], search2 = Request.QueryString["search2"], sortby2 = Request.QueryString["sortby2"] })</th>
                        <th scope="col">@Html.ActionLink("TITLE", "Dashboard", new { sortby = ViewBag.SortTitle, search = Request.QueryString["search"], search2 = Request.QueryString["search2"], sortby2 = Request.QueryString["sortby2"] })</th>
                        <th scope="col">@Html.ActionLink("CATEGORY", "Dashboard", new { sortby = ViewBag.SortCategory, search = Request.QueryString["search"], search2 = Request.QueryString["search2"], sortby2 = Request.QueryString["sortby2"] })</th>
                        <th scope="col">STATUS</th>
                        <th scope="col" class="text-center">ACTIONS</th>
                    </tr>
                </thead>
                <tbody>
                    @if(Model.Progress.Count() == 0)
                    {
                        <tr>
                            <td colspan="5" class="text-center">No record found</td>
                        </tr>
                    }
                    @foreach (var item in Model.Progress) 
                    {
                        <tr>
                            <td scope="row">@item.CreatedDate.Value.ToShortDateString()</td>
                            <td>@item.Title</td>
                            <td>@item.CategoryTable.Name</td>
                            <td>@item.ReferenceDataTable.StatusName</td>
                            @if (item.ReferenceDataTable.StatusName == "Draft")
                            {
                                <td align="center"><a href="@Url.Action("AddNotes","AddNotes", new { id = item.NID })"><abbr title="Edit Note"><i class="fa fa-pencil mr-sm-2"></i></abbr></a> <a href="@Url.Action("DeleteBook","Dashboard", new { noteid = item.NID})" onclick = "return confirm('Are you sure you wants to delete this book?');"><abbr title="Delete Note"><i class="fa fa-trash-o"></i></abbr></a></td>
                            }
                            else
                            {
                                <td align="center"><a href="@Url.Action("NoteDetails","NoteDetails", new { nid = item.NID })"><abbr title="Note Details"><i class="fa fa-eye"></i></abbr></a></td>
                            }
                        </tr>
                    }

                </tbody>
            </table>

        </div>

    </div>

    <!-- Pagination -->

    <div class="row justify-content-center">

        <div class="pagination">
            @Html.PagedListPager(Model.Progress, page => Url.Action("Dashboard", new { page , search = Request.QueryString["search"], sortby = Request.QueryString["sortby"], search2 = Request.QueryString["search2"], sortby2 = Request.QueryString["sortby2"] }))
        </div>

    </div>

</div>

<!-- Progress Notes Container End-->
<!-- Published Notes Container -->

<div class="container" id="published-container">

    @using (Html.BeginForm("Dashboard", "Dashboard", new { search = Request.QueryString["search"], sortby = Request.QueryString["sortby"] }, FormMethod.Get))
    {
        <div class="row">

            <div class="col-md-6">
                <h3>Published Notes</h3>
            </div>
            <div class="col-md-6 d-flex justify-content-end">
                <input class="form-control mr-2 dashboard-search" type="text" placeholder="Search" aria-label="Search" name="search2">
                <button class="btn dashboard-search-button">SEARCH</button>
            </div>

        </div>
    }

    <br>

    <div class="row">

        <div class="col table-responsive-md">

            <table class="table shadow-on-hover table-border">
                <thead>
                    <tr>
                        <th scope="col">@Html.ActionLink("ADDED DATE", "Dashboard", new { sortby2 = ViewBag.SortDate2, search = Request.QueryString["search"], sortby = Request.QueryString["sortby"], search2 = Request.QueryString["search2"] })</th>
                        <th scope="col">@Html.ActionLink("TITLE", "Dashboard", new { sortby2 = ViewBag.SortTitle2, search = Request.QueryString["search"], sortby = Request.QueryString["sortby"], search2 = Request.QueryString["search2"] })</th>
                        <th scope="col">@Html.ActionLink("CATEGORY", "Dashboard", new { sortby2 = ViewBag.SortCategory2, search = Request.QueryString["search"], sortby = Request.QueryString["sortby"], search2 = Request.QueryString["search2"] })</th>
                        <th scope="col">SELL TYPE</th>
                        <th scope="col">PRICE</th>
                        <th scope="col" class="text-center">ACTIONS</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Published.Count() == 0)
                    {
                        <tr>
                            <td colspan="6" class="text-center">No record found</td>
                        </tr>
                    }
                    @foreach (var item in Model.Published)
                    {
                        <tr>
                            <td scope="row">@item.CreatedDate.Value.ToShortDateString()</td>
                            <td>@item.Title</td>
                            <td>@item.CategoryTable.Name</td>
                            @if (item.IsPaid)
                            {
                                <td>Paid</td>
                            }
                            else
                            {
                                <td>Free</td>
                            }
                            <td>₹ @item.Price</td>
                            <td align="center"><a href="@Url.Action("NoteDetails","NoteDetails", new { nid = item.NID })"><abbr title="Note Details"><i class="fa fa-eye"></i></abbr></a></td>
                        </tr>
                    }

                </tbody>
            </table>

        </div>

    </div>

    <!-- Pagination -->

    <div class="row justify-content-center">

        <div class="pagination">
            @Html.PagedListPager(Model.Published, page2 => Url.Action("Dashboard", new { page2, search = Request.QueryString["search"], sortby = Request.QueryString["sortby"], search2 = Request.QueryString["search2"], sortby2 = Request.QueryString["sortby2"] }))
        </div>

    </div>

</div>

<!-- Published Notes Container End-->
