@using PagedList;
@using PagedList.Mvc;

@model IPagedList<NotesMarketPlace.Context.SpamTable>

@{

    ViewBag.Title = "Spam Reports";
    Layout = "~/Views/Shared/AdminNavbar.cshtml";
    <link rel="stylesheet" href="~/Content/AdminContent/css/SpamReports.css" />
}

<!-- Spam Reports Container -->

<div class="container" id="spam-reports-container">

    <div class="row">

        <div class="col-md-6">
            <h2>Spam Reports</h2>
        </div>

        @using (Html.BeginForm("SpamReports", "SpamReports", FormMethod.Get, new { @class = "col-md-6 d-flex justify-content-end" }))
        {
            <input class="form-control mr-2 spam-reports-search" type="text" placeholder="Search" aria-label="Search" name="search">
            <button class="btn spam-reports-search-button" type="submit">SEARCH</button>
        }

    </div>

    <br>

    <div class="row">

        <div class="col table-responsive-md">

            <table class="table shadow-on-hover table-border">
                <thead>
                    <tr>
                        <th scope="col">SR NO.</th>
                        <th scope="col">@Html.ActionLink("REPORTED BY", "SpamReports", new { sortby = ViewBag.SortReportedBy, search = Request.QueryString["search"] })</th>
                        <th scope="col">@Html.ActionLink("NOTE TITLE", "SpamReports", new { sortby = ViewBag.SortTitle, search = Request.QueryString["search"] })</th>
                        <th scope="col">@Html.ActionLink("CATEGORY", "SpamReports", new { sortby = ViewBag.SortCategory, search = Request.QueryString["search"] })</th>
                        <th scope="col">@Html.ActionLink("DATE EDITED", "SpamReports", new { sortby = ViewBag.SortDate, search = Request.QueryString["search"] })</th>
                        <th scope="col">REMARK</th>
                        <th scope="col">ACTION</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Count() == 0)
                    {
                        <tr>
                            <td colspan="7" class="text-center">No record found</td>
                        </tr>
                    }
                    @{ int c = 0; }
                    @foreach (var item in Model)
                    {
                        c += 1;
                        <tr>
                            <td scope="row">@c</td>
                            <td>@item.UserTable.FirstName @item.UserTable.LastName</td>
                            <td><a href="@Url.Action("AdminNoteDetails","Admin", new { nid = item.NID })" style="color:#6255a5;">@item.NoteTable.Title</a></td>
                            <td>@item.NoteTable.CategoryTable.Name</td>
                            <td>@item.CreatedDate</td>
                            <td>@item.Comments</td>
                            <td align="center"><a href="@Url.Action("DeleteSpamReports","SpamReports", new { sid = item.ID })" onclick="return confirm('Are you sure you want to delete reported issue?')"><abbr title="Delete"><i class="fa fa-trash-o"></i></abbr></a></td>
                            <td class="dropdown">
                                <i class="fa fa-ellipsis-v float-right"></i>
                                <div class="dropdown">
                                    <div class="dropdown-content">
                                        <a href="@Url.Action("DownloadForAdmin","NotesUnderReview", new { nid = item.NID })">Download Note</a>
                                        <a href="@Url.Action("AdminNoteDetails","Admin", new { nid = item.NID })">View More Details</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>

        </div>

    </div>

    <!-- Pagination -->

    <div class="row justify-content-center">

        <div class="pagination">
            @Html.PagedListPager(Model, page => Url.Action("SpamReports", new { page, search = Request.QueryString["search"], sortby = Request.QueryString["sortby"] }))
        </div>

    </div>

</div>

<!-- Spam Reports End -->